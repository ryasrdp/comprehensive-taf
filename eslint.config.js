import eslintPluginPlaywright from 'eslint-plugin-playwright';

export default [
  {
    files: ['**/*.js'],
    languageOptions: {
      ecmaVersion: 2021,
      sourceType: 'module',
      globals: {
        browser: true,
        node: true,
      },
    },
    plugins: {
      playwright: eslintPluginPlaywright,
    },
    ignores: [
      '**/temp.js',
      'playwright.config.js',
      'demo-todo-app.spec.js',
      'dist',
      'build',
      '**/features/**/*',
      '*.spec.js',
      'features-gen/*',
      'node_modules/*',
      '**/test-report/*',
      '**/test-reports/*',
      '**/test-results/*',
      'support/*',
    ],
    rules: {
      'array-callback-return': 'warn',
      'prefer-destructuring': ['warn', { array: false, object: true }, { enforceForRenamedProperties: false }],
      'prefer-template': 'error',
      'no-useless-concat': 'error',
      'no-eval': 'error',
      'prefer-spread': 'warn',
      'no-param-reassign': 'error',
      'prefer-arrow-callback': 'warn',
      'arrow-spacing': ['warn', { before: true, after: true }],
      'keyword-spacing': ['warn', { before: true, after: true }],
      'arrow-body-style': ['warn', 'as-needed'],
      'arrow-parens': ['warn', 'as-needed'],
      'no-duplicate-imports': 'error',
      'no-iterator': 'warn',
      'dot-notation': 'warn',
      'no-undef': 'error',
      'prefer-const': 'warn',
      'no-var': 'error',
      'one-var': ['warn', 'never'],
      'no-multi-assign': 'error',
      eqeqeq: ['warn', 'smart'],
      'no-nested-ternary': 'error',
      'no-unneeded-ternary': 'error',
      'space-before-blocks': 'warn',
      'space-infix-ops': 'error',
      'padded-blocks': ['error', 'never'],
      'comma-spacing': ['error', { before: false, after: true }],
      'func-call-spacing': ['error', 'never'],
      'key-spacing': ['error', { mode: 'strict' }],
      'comma-dangle': ['error', 'always-multiline'],
      'no-unused-vars': 'warn',
      'no-console': ['error', { allow: ['warn', 'error'] }],
      camelcase: 'off',
      curly: 2,
      'default-case': 2,
      'block-scoped-var': 2,
      'consistent-return': ['error', { treatUndefinedAsUnspecified: false }],
      'default-case-last': 2,
      'default-param-last': 2,
      'dot-location': ['error', 'property'],
      'guard-for-in': 2,
      'max-classes-per-file': 2,
      'no-constructor-return': 2,
      'no-else-return': 2,
      'no-implicit-coercion': 2,
      'no-lone-blocks': 2,
      'no-loop-func': 2,
      'no-multi-spaces': 2,
      'no-new': 2,
      'no-new-func': 2,
      'no-new-wrappers': 2,
      'no-sequences': 2,
      'require-await': 2,
      'init-declarations': 2,
      'brace-style': ['error', '1tbs'],
      'capitalized-comments': 0,
      'comma-style': 2,
      'computed-property-spacing': 2,
      'eol-last': 2,
      'jsx-quotes': ['error', 'prefer-double'],
      'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],
      'newline-per-chained-call': 0,
      'no-bitwise': 2,
      'no-lonely-if': 2,
      'no-trailing-spaces': 2,
      'no-whitespace-before-property': 2,
      'one-var-declaration-per-line': 2,
      'prefer-rest-params': 2,
      'max-len': [
        'error',
        {
          code: 120,
        },
      ],
    },
  },
];
